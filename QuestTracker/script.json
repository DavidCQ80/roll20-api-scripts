{
    "name": "QuestTracker",
    "script": "QuestTracker.js",
    "version": "1.0",
    "previousversions": [],
    "description": "# Quest Tracker\r Quest Tracker is a comprehensive tool for managing quests, rumors, and events in a tabletop RPG setting. It integrates seamlessly with Roll20 to provide detailed tracking and visualization of game elements, making it ideal for GMs and players who want to streamline their campaigns.\r\r ## Features\r\r ### Quest Management \r * Create, edit, and remove quests.\r * Track quest statuses (e.g., \"Started\", \"Completed\", \"Failed\").\r * Group quests into logical categories.\r\r ### Rumor Handling \r * Add and manage rumors by location or quest.\r * Generate rumors dynamically.\r * Associate rumors with quest progression.\r\r ### Event Scheduling:**\r * Schedule events with repeatable options.\r * Adjust events based on in-game calendars.\r\r ### Weather and Climate Integration:**\r * Dynamic weather generation based on in-game conditions.\r * Detailed descriptions of current weather conditions.\r\r ### Calender Integration:**\r * Track Leap years\r * Different Calander types, e.g. Harpto, Gregorian etc.\r\r ### Visual Quest Tree:**\r * Display quests and relationships as a tree diagram.\r * Automatically handle mutually exclusive relationships.\r\r ## Getting Started - Access all features through an intuitive graphical user interface. simply type `!qt` into chat. Navigate through menus to manage quests, rumors, and events seamlessly. \r\r ## More Information?\r [See the README](https://github.com/Roll20/roll20-api-scripts/blob/master/QuestTracker/README.md) \r ## Contributing \r Contributions are welcome! Please submit pull requests or report issues on the GitHub repository: [GitHub Repository](https://github.com/Roll20/roll20-api-scripts/issues)\r",
    "authors": "Boli",
    "roll20userid": "3714078",
    "useroptions": [],
    "dependencies": ["CalenderData"],
    "modifies": {
        "chat": "read, write",
        "layer": "read, write",
        "paths": "read, write",
        "graphic": "read, write",
        "text": "read, write",
        "token": "read, write",
        "state.QUEST_TRACKER": "read, write"
    },
    "conflicts": []
}